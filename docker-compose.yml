version: "3.8"

services:

  users-db:
    container_name: users-db
    image: postgres:15.2-alpine
    environment:
      POSTGRES_USER: postgres1
      POSTGRES_PASSWORD: postgres1
      POSTGRES_DB: user
    ports:
      - "5440:5432"
    volumes:
      - "C:/postgres/posting-system/users_db/data:/var/lib/postgresql/data"
    healthcheck:
      test: pg_isready -U postgres1 -d user
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - backend

  posts-db:
    container_name: posts-db
    image: postgres:15.2-alpine
    environment:
      POSTGRES_USER: postgres1
      POSTGRES_PASSWORD: postgres1
      POSTGRES_DB: post
    ports:
      - "5441:5432"
    volumes:
      - "C:/postgres/posting-system/posts_db/data:/var/lib/postgresql/data"
    healthcheck:
      test: pg_isready -U postgres1 -d post
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - backend

  user-service:
    container_name: user-service
    image: epamvolodymyrsemerkov/user-service:1.0.0
    hostname: user-service
    depends_on:
      users-db:
        condition: service_healthy
    restart: on-failure
    ports:
      - "8070:8070"
    networks:
      - backend
    environment:
      - DB_URL=jdbc:postgresql://users-db:5432/user
      - DB_USERNAME=postgres1
      - DB_PASSWORD=postgres1

  post-service:
    container_name: post-service
    image: epamvolodymyrsemerkov/post-service:1.0.0
    hostname: post-service
    depends_on:
      posts-db:
        condition: service_healthy
      user-service:
        condition: service_started
    restart: on-failure
    ports:
      - "8071:8071"
    networks:
      - backend
    environment:
      - DB_URL=jdbc:postgresql://posts-db:5432/post
      - DB_USERNAME=postgres1
      - DB_PASSWORD=postgres1
      - USER_SERVICE_URL=http://user-service:8070

networks:
  backend: